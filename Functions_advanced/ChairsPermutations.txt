#An easy way,which is used always:

#from itertools import combinations

#names = input().split(', ')
#chairs = int(input())

#valid_combinations = combinations(names,chairs)

#for name in valid_combinations:
    #print(*name,sep = ', ')
    

#Practising recursion:
def valid_combinations(names_list,num_chairs,current_names = []):
    if len(current_names) == num_chairs:
        print(', '.join(current_names))
        return
    for i in range(len(names_list)):
        current_names.append(names_list[i])
        valid_combinations(names_list[i+1:],num_chairs,current_names)
        current_names.pop()



names = input().split(', ')
chairs = int(input())
valid_combinations(names,chairs)